table(dat[is.na(dat$Probe_A)==F, 'time'])
table(dat[is.na(dat$Probe_A)==F & dat$PMA=='NOPMA', 'time'])
dat.sas<-dat
dat.sas<-dat[dat$PMA=="NOPMA",]
head(dat.sas)
dat.sas
dat.sas$Probe_A<-ifelse(is.na(dat.sas$Probe_A)==F & dat.sas$Probe_A==0, 41, dat.sas$Probe_A)
dat.sas[, c("Probe_A", "Probe_B")]
dat.sas$Probe_B<-ifelse(is.na(dat.sas$Probe_B)==F & dat.sas$Probe_B==0, 41, dat.sas$Probe_B)
dat.sas$Probe_C<-ifelse(is.na(dat.sas$Probe_C)==F & dat.sas$Probe_C==0, 41, dat.sas$Probe_C)
dat.sas$Probe_D<-ifelse(is.na(dat.sas$Probe_D)==F & dat.sas$Probe_D==0, 41, dat.sas$Probe_D)
dat.sas$Probe_E<-ifelse(is.na(dat.sas$Probe_E)==F & dat.sas$Probe_E==0, 41, dat.sas$Probe_E)
dat.sas$mean_probe<-(dat.sas$Probe_A+dat.sas$Probe_B+dat.sas$Probe_C+dat.sas$Probe_D+dat.sas$Probe_E)/5
dat.sas<-dat.sas[,c('patid', 'time', 'mean_probe')]
dat.sas
interaction.plot(x.factor=dat.sas$time, trace.factor = dat.sas$patid, response=dat.sas$mean_probe)
plot(dat.sas$time, data.sas$mean_probe)
plot(dat.sas$time, dat.sas$mean_probe)
write.csv(dat.sas, 'H:/Walter_TB/confirmation_data.csv')
table.calc<-function(c, gamma, cp, alpha1, psi, beta0){
time<-seq(0,57,1)
logmufixed<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10(c*10^(alpha1*time)+(1-c)*10^(gamma*time) -c*alpha1*(10^(alpha1*time)-10^(gamma*time))/(alpha1-gamma))),
(1/log10(0.5))*(beta0+log10(c*10^(alpha1*time+psi*(time-cp))+(1-c)*10^(gamma*time) -c*(alpha1)*(10^(alpha1*cp)-10^(gamma*cp))*10^(gamma*(time-cp))/(alpha1-gamma)
- c*(alpha1+psi)*10^(alpha1*cp)*(10^((alpha1+psi)*(time-cp))-10^(gamma*(time-cp))) /(alpha1+psi-gamma)))
)
live<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10(c*10^((alpha1)*time))),(1/log10(0.5))*(beta0+log10(c*10^(alpha1*time+psi*(time-cp)))))
dead<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10((1-c)*10^(gamma*time) -c*(alpha1)*(10^((alpha1)*time)-10^(gamma*time))/(alpha1-gamma))),(1/log10(0.5))*(beta0+log10((1-c)*10^(gamma*time) -c*(alpha1)*(10^(alpha1*cp)-10^(gamma*cp))*10^(gamma*(time-cp))/(alpha1-gamma)
- c*(alpha1+psi)*10^(alpha1*cp)*(10^((alpha1+psi)*(time-cp))-10^(gamma*(time-cp))) /(alpha1+psi-gamma)))
)
live.at.cp<-intercept+slope*(1/log10(0.5))*(beta0+log10(c*10^((alpha1)*cp)))
#Percent viable and dead at day 7
c(100*(10^(intercept+slope*live[4])/(10^(intercept+slope*live[4])+10^(intercept+slope*dead[4]))),
100*(1-10^(intercept+slope*live[4])/(10^(intercept+slope*live[4])+10^(intercept+slope*dead[4]))),
#reduction in viable MTb by day 7
slope*live[4]-slope*live[1],
100*(1-10^(slope*live[4]-slope*live[1])),
cp,
#Early Rate of killing
(live.at.cp-intercept-slope*live[1])/cp,
#alpha1/log(10)
#total.conv<-intercept+slope*logmufixed
#reduction in mtb by day 14
#slope*live[5]-slope*live[1]
#late rate of killing
(intercept+slope*live[7]-live.at.cp)/(57-cp),
#(alpha1+psi)/log(10)
alpha1,
alpha1+psi, live)
}
tc1<-table.calc(c=0.9,
gamma=log10(0.5)/0.75,
cp=	6.5463,
alpha1=	-0.2444,
psi=	0.1863,
beta0	=-6.4948)
live0<-tc1[-c(1:9)]
tc2<-table.calc(c=0.9,
gamma=log10(0.5)/0.5,
cp	=7.093,
alpha1=	-0.2248,
psi	=0.1654,
beta0=	-6.4624
)
live1<-tc2[-c(1:9)]
tc3<-table.calc(c=0.9,
gamma=log10(0.5)/1,
cp=	5.7889,
alpha1=	-0.2724,
psi=	0.2153,
beta0=	-6.5345
)
live2<-tc3[-c(1:9)]
tc4<-table.calc(c=0.9,
gamma=log10(0.5)/1.25,
cp=	5.0266,
alpha1=	-0.3078,
psi=	0.2515,
beta0=	-6.5774
)
live3<-tc4[-c(1:9)]
tc1
intercept
slope
plot(time, converted.pred, ylab=expression(Genomic~equivalents~italic(M.~tuberculosis)~(log[10])), xlab="Time (Days)", type='l', ylim=c(0,6))
lines(time, converted.live, col='orange')
lines(time, converted.live2, col='red')
lines(time, converted.live3, col='green')
converted.live
converted.live2
tc1.1<-table.calc(c=0.8,
gamma=log10(0.5)/0.75,
cp=	6.5947,
alpha1=	-0.2375,
psi=	0.1793,
beta0	=-6.4765)
live0<-tc1.1[-c(1:9)]
tc2.1<-table.calc(c=0.8,
gamma=log10(0.5)/0.5,
cp	=7.1898,
alpha1=	-0.2181,
psi	=0.1587,
beta0=	-6.4432
)
live1<-tc2.1[-c(1:9)]
tc3.1<-table.calc(c=0.8,
gamma=log10(0.5)/1,
cp=	5.8471,
alpha1=	-0.2638,
psi=	0.2066,
beta0=	-6.519
)
live2<-tc3.1[-c(1:9)]
tc4.1<-table.calc(c=0.8,
gamma=log10(0.5)/1.25,
cp=	5.0802,
alpha1=	-0.2973,
psi=	0.2409,
beta0=	-6.5647
)
live3<-tc4.1[-c(1:9)]
live3
plot(time, converted.pred, ylab=expression(Genomic~equivalents~italic(M.~tuberculosis)~(log[10])), xlab="Time (Days)", type='l', ylim=c(0,6))
lines(time, converted.live, col='orange')
lines(time, converted.live2, col='red')
lines(time, converted.live3, col='green')
tc1
tc1<-table.calc(c=0.9,
gamma=log10(0.5)/0.75,
cp=	6.5463,
alpha1=	-0.2444,
psi=	0.1863,
beta0	=-6.4948)
tc1
tc2<-table.calc(c=0.9,
gamma=log10(0.5)/0.5,
cp	=7.093,
alpha1=	-0.2248,
psi	=0.1654,
beta0=	-6.4624
)
tc2
tc1.2<-table.calc(c=0.99,
gamma=log10(0.5)/0.75,
cp=	6.3934
,alpha1=	-0.2524
,psi=	0.1906
,beta0=	-6.1185
)
tc1.2
tc2.2<-table.calc(c=0.99,
gamma=log10(0.5)/0.5,
cp=	6.9127,
alpha1=	-0.2321,
psi=	0.1689,
beta0=	-6.0854
)
tc2.2
tc4.2<-table.calc(c=0.99,
gamma=log10(0.5)/1.25,
cp=	4.8974
,alpha1=	-0.3179
,psi=	0.2577
,beta0=	-6.2002
)
tc4.2
(7-2)/(18.5-33)
slope
intercept
7-slope*18.5
seq(0,57,1)
seq(0,57,1)[4]
live
c=0.9
gamma=log10(0.5)/0.75
cp=	6.5047
alpha1=	-0.2501
psi=	0.1921
beta0	=-6.5098
time<-seq(0,57,1)
logmufixed<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10(c*10^(alpha1*time)+(1-c)*10^(gamma*time) -c*alpha1*(10^(alpha1*time)-10^(gamma*time))/(alpha1-gamma))),
(1/log10(0.5))*(beta0+log10(c*10^(alpha1*time+psi*(time-cp))+(1-c)*10^(gamma*time) -c*(alpha1)*(10^(alpha1*cp)-10^(gamma*cp))*10^(gamma*(time-cp))/(alpha1-gamma)
- c*(alpha1+psi)*10^(alpha1*cp)*(10^((alpha1+psi)*(time-cp))-10^(gamma*(time-cp))) /(alpha1+psi-gamma)))
)
live<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10(c*10^((alpha1)*time))),(1/log10(0.5))*(beta0+log10(c*10^(alpha1*time+psi*(time-cp)))))
dead<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10((1-c)*10^(gamma*time) -c*(alpha1)*(10^((alpha1)*time)-10^(gamma*time))/(alpha1-gamma))),(1/log10(0.5))*(beta0+log10((1-c)*10^(gamma*time) -c*(alpha1)*(10^(alpha1*cp)-10^(gamma*cp))*10^(gamma*(time-cp))/(alpha1-gamma)
- c*(alpha1+psi)*10^(alpha1*cp)*(10^((alpha1+psi)*(time-cp))-10^(gamma*(time-cp))) /(alpha1+psi-gamma)))
)
length(live)
cbind(live, time)
100*(10^(intercept+slope*live[7])/(10^(intercept+slope*live[7])+10^(intercept+slope*dead[7])))
100*(1-10^(intercept+slope*live[7])/(10^(intercept+slope*live[7])+10^(intercept+slope*dead[7])))
tc1<-table.calc(c=0.9,
gamma=log10(0.5)/0.75,
cp=	6.5463,
alpha1=	-0.2444,
psi=	0.1863,
beta0	=-6.4948)
tc1
tc1<-table.calc(c=0.99,
gamma=log10(0.5)/0.5,
cp=	7.0136
,alpha1=-0.2303
,psi=	0.1709
,beta0=	-6.4777
)
tc1
live0<-tc1[-c(1:9)]
converted.live0<-slope*live0+intercept
live0
converted.live0[8]-converted.live0[1]
cp=	8.7778
alpha1=	-0.1943
psi=	0.1348
beta0=	-6.4514
time<-seq(0,57,1)
live<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10(10^(alpha1*time))),
(1/log10(0.5))*(beta0+log10(10^(alpha1*time+psi*(time-cp)))))
live
time<-c(0,2,4,7,15,29,57)
live<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10(10^(alpha1*time))),
(1/log10(0.5))*(beta0+log10(10^(alpha1*time+psi*(time-cp)))))
live.at.cp<-intercept+slope*(1/log10(0.5))*(beta0+log10(10^((alpha1)*cp)))
slope*live[4]-slope*live[1]
100*(1-10^(slope*live[4]-slope*live[1]))
cp
(live.at.cp-intercept-slope*live[1])/cp
length(live)
(intercept+slope*live[7]-live.at.cp)/(57-cp)
alpha1,
alpha1+psi, live
alpha1
table.calc<-function(c, gamma, cp, alpha1, psi, beta0){
time<-c(0,2,4,7,15,29,57)
logmufixed<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10(c*10^(alpha1*time)+(1-c)*10^(gamma*time) -c*alpha1*(10^(alpha1*time)-10^(gamma*time))/(alpha1-gamma))),
(1/log10(0.5))*(beta0+log10(c*10^(alpha1*time+psi*(time-cp))+(1-c)*10^(gamma*time) -c*(alpha1)*(10^(alpha1*cp)-10^(gamma*cp))*10^(gamma*(time-cp))/(alpha1-gamma)
- c*(alpha1+psi)*10^(alpha1*cp)*(10^((alpha1+psi)*(time-cp))-10^(gamma*(time-cp))) /(alpha1+psi-gamma)))
)
live<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10(c*10^((alpha1)*time))),(1/log10(0.5))*(beta0+log10(c*10^(alpha1*time+psi*(time-cp)))))
dead<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10((1-c)*10^(gamma*time) -c*(alpha1)*(10^((alpha1)*time)-10^(gamma*time))/(alpha1-gamma))),(1/log10(0.5))*(beta0+log10((1-c)*10^(gamma*time) -c*(alpha1)*(10^(alpha1*cp)-10^(gamma*cp))*10^(gamma*(time-cp))/(alpha1-gamma)
- c*(alpha1+psi)*10^(alpha1*cp)*(10^((alpha1+psi)*(time-cp))-10^(gamma*(time-cp))) /(alpha1+psi-gamma)))
)
live.at.cp<-intercept+slope*(1/log10(0.5))*(beta0+log10(c*10^((alpha1)*cp)))
#Percent viable and dead at day 7
c(100*(10^(intercept+slope*live[4])/(10^(intercept+slope*live[4])+10^(intercept+slope*dead[4]))),
100*(1-10^(intercept+slope*live[4])/(10^(intercept+slope*live[4])+10^(intercept+slope*dead[4]))),
#reduction in viable MTb by day 7
slope*live[4]-slope*live[1],
100*(1-10^(slope*live[4]-slope*live[1])),
cp,
#Early Rate of killing
(live.at.cp-intercept-slope*live[1])/cp,
#alpha1/log(10)
#total.conv<-intercept+slope*logmufixed
#reduction in mtb by day 14
#slope*live[5]-slope*live[1]
#late rate of killing
(intercept+slope*live[7]-live.at.cp)/(57-cp),
#(alpha1+psi)/log(10)
alpha1,
alpha1+psi, live)
}
tc1<-table.calc(c=0.9,
gamma=log10(0.5)/0.75,
cp=	6.5463,
alpha1=	-0.2444,
psi=	0.1863,
beta0	=-6.4948)
tc1
tc2<-table.calc(c=0.9,
gamma=log10(0.5)/0.5,
cp	=7.093,
alpha1=	-0.2248,
psi	=0.1654,
beta0=	-6.4624
)
tc2
tc3<-table.calc(c=0.9,
gamma=log10(0.5)/1,
cp=	5.7889,
alpha1=	-0.2724,
psi=	0.2153,
beta0=	-6.5345
)
tc3
tc4<-table.calc(c=0.9,
gamma=log10(0.5)/1.25,
cp=	5.0266,
alpha1=	-0.3078,
psi=	0.2515,
beta0=	-6.5774
)
tc4
tc1.1<-table.calc(c=0.8,
gamma=log10(0.5)/0.75,
cp=	6.5947,
alpha1=	-0.2375,
psi=	0.1793,
beta0	=-6.4765)
tc1.1
tc2.1<-table.calc(c=0.8,
gamma=log10(0.5)/0.5,
cp	=7.1898,
alpha1=	-0.2181,
psi	=0.1587,
beta0=	-6.4432
)
tc2.1
tc3.1<-table.calc(c=0.8,
gamma=log10(0.5)/1,
cp=	5.8471,
alpha1=	-0.2638,
psi=	0.2066,
beta0=	-6.519
)
tc3.1
tc4.1<-table.calc(c=0.8,
gamma=log10(0.5)/1.25,
cp=	5.0802,
alpha1=	-0.2973,
psi=	0.2409,
beta0=	-6.5647
)
tc4.1
table.calc(c=0.99,
gamma=log10(0.5)/0.5,
cp=	11.4693,
alpha1=	-0.1541,
psi=	0.1037,
beta0	=-5.6908)
table.calc(c=0.99,
gamma=log10(0.5)/0.5,
cp=	11.4693,
alpha1=	-0.1706,
psi=	0.1203,
beta0	=-5.7254)
table.calc(c=0.99,
gamma=log10(0.5)/0.75,
cp=10.4647,
alpha1=-0.183,
psi=0.1329,
beta0=-5.7458)
table.calc(c=0.99,
gamma=log10(0.5)/1,
cp=	9.049,
alpha1=	-0.2069,
psi=	0.1571,
beta0=	-5.754)
table.calc(c=0.99,
gamma=log10(0.5)/1.25,
cp	=7.0565,
alpha1=	-0.2598,
psi	=0.2105,
beta0=	-5.7399)
table.calc(c=0.9,
gamma=log10(0.5)/0.5,
cp=	16.2645,
alpha1=	-0.1407,
psi=	0.09463,
beta0=	-5.7659)
table.calc(c=0.9,
gamma=log10(0.5)/0.75,
cp=	15.5008,
alpha1=	-0.1447,
psi=	0.09858,
beta0=	-5.7953)
table.calc(c=0.9,
gamma=log10(0.5)/1,
cp=	9.593,
alpha1=	-0.1946,
psi=	0.1449,
beta0=	-5.7518)
table.calc(c=0.9,
gamma=log10(0.5)/1.25,
cp=	7.1462,
alpha1=	-0.2521,
psi=	0.2027,
beta0=	-5.733)
table.calc(c=0.8,
gamma=log10(0.5)/0.5,
cp=	16.4631,
alpha1=	-0.1378,
psi=	0.09172,
beta0=	-5.7441)
table.calc(c=0.8,
gamma=log10(0.5)/0.75,
cp=	15.6922,
alpha1=	-0.1415,
psi=	0.09545,
beta0=	-5.7744)
table.calc(c=0.8,
gamma=log10(0.5)/1,
cp=	14.7108,
alpha1=	-0.1473,
psi=	0.1012,
beta0=	-5.8024)
table.calc(c=0.8,
gamma=log10(0.5)/1,
cp=	7.2644,
alpha1=	-0.2427,
psi=	0.1933,
beta0=	-5.7214)
param<-read.csv("H:/Walter_TB/DNA_models/parameters_south_africa.csv")
param
i<-1
p<-param[i,]
p$c
p$gamma
tab<-NULL
for (i in 1:(nrow(param)-1)){p<-param[i,]
tab<-rbind(tab,c(p$c, p$gamma, table.calc(c=p$c,
gamma=log10(0.5)/p$gamma ,
cp=	p$cp,
alpha1=p$alpha1,
psi=	p$psi,
beta0=	p$beta0)))
}
tab
write.csv("H:/Walter_TB/DNA_models/south_africa_tab.csv")
write.csv(tab,"H:/Walter_TB/DNA_models/south_africa_tab.csv")
param[13,]
cp=	12.6254
alpha1=	-0.1572
psi=	0.1055
beta0=	-5.6811
slope<-(7-2)/(18.5-33)
#cp =16.9869
#alpha1= -0.1187
#psi= 0.07037
#beta0= -5.8570
time<-c(0,2,4,7,15,29,57)
live<-ifelse(time<cp, (1/log10(0.5))*(beta0+log10(10^(alpha1*time))),
(1/log10(0.5))*(beta0+log10(10^(alpha1*time+psi*(time-cp)))))
live.at.cp<-intercept+slope*(1/log10(0.5))*(beta0+log10(10^((alpha1)*cp)))
#Percent viable and dead at day 7
#reduction in viable MTb by day 7
slope*live[4]-slope*live[1]
100*(1-10^(slope*live[4]-slope*live[1]))
cp
(live.at.cp-intercept-slope*live[1])/cp
(intercept+slope*live[7]-live.at.cp)/(57-cp)
alpha1
alpha1+psi
get.info("Plate_0107")
p<-get.info("Plate_0107")
p$dups[as.character(p$dups$id1.plate) != as.character(p$dups$id2.plate),]
dim(p$dups[as.character(p$dups$id1.plate) != as.character(p$dups$id2.plate),])
dim(p$dups[as.character(p$dups$id1.plate) != as.character(p$dups$id2.plate) & p$dups$Kinship>0.4,])
p<-get.info("Plate_001")
p
p$dups[as.character(p$dups$id1.plate) == as.character(p$dups$id2.plate),]
##########################################################################
dup.kin<-read.csv("H:/IPF_Plate_Issues/dup_kinship.csv", colClasses = "character")
high.kin<-read.csv("H:/IPF_Plate_Issues/high_kinship.csv", colClasses = "character")
id1.plate<-NULL
id1.well<-NULL
for (i in 1:length(dup.kin$ID1)){
plate<-paste( unique(manifest[manifest$UDF.Investigator.Sample.Name==dup.kin$firstID[i],]$Plate.Number),collapse=", ")
well<-paste( unique(manifest[manifest$UDF.Investigator.Sample.Name==dup.kin$firstID[i],]$Sample.Well.Location),collapse=", ")
id1.plate<-c(id1.plate, plate)
id1.well<-c(id1.well, well)
}
id2.plate<-NULL
id2.well<-NULL
for (i in 1:length(dup.kin$ID2)){
plate<-paste( unique(manifest[manifest$UDF.Investigator.Sample.Name==dup.kin$secondID[i],]$Plate.Number),collapse=", ")
well<-paste( unique(manifest[manifest$UDF.Investigator.Sample.Name==dup.kin$secondID[i],]$Sample.Well.Location),collapse=", ")
id2.plate<-c(id2.plate, plate)
id2.well<-c(id2.well, well)
}
dup.kin2<-cbind(dup.kin, id1.plate, id1.well, id2.plate, id2.well)
#Reapeat for high kinship
id1.plate<-NULL
id1.well<-NULL
for (i in 1:length(high.kin$ID1)){
plate<-paste( unique(manifest[manifest$UDF.Investigator.Sample.Name==high.kin$firstID[i],]$Plate.Number),collapse=", ")
well<-paste( unique(manifest[manifest$UDF.Investigator.Sample.Name==high.kin$firstID[i],]$Sample.Well.Location),collapse=", ")
id1.plate<-c(id1.plate, plate)
id1.well<-c(id1.well, well)
}
id2.plate<-NULL
id2.well<-NULL
for (i in 1:length(high.kin$ID2)){
plate<-paste( unique(manifest[manifest$UDF.Investigator.Sample.Name==high.kin$secondID[i],]$Plate.Number),collapse=", ")
well<-paste( unique(manifest[manifest$UDF.Investigator.Sample.Name==high.kin$secondID[i],]$Sample.Well.Location),collapse=", ")
id2.plate<-c(id2.plate, plate)
id2.well<-c(id2.well, well)
}
high.kin2<-cbind(high.kin, id1.plate, id1.well, id2.plate, id2.well)
###############################################################################################
get.info<-function(plate){list(n_expected=
dim(dup.kin2[unique(c(grep(plate, dup.kin2$id1.plate), grep(plate, dup.kin2$id2.plate))),
c("Kinship", "firstID","secondID","id1.plate","id1.well","id2.plate", "id2.well")]),
n_unexpected=dim(high.kin2[unique(c(grep(plate, high.kin2$id1.plate), grep(plate, high.kin2$id2.plate))),
c("Kinship", "firstID","secondID","id1.plate","id1.well","id2.plate", "id2.well")]),
dups=dup.kin2[unique(c(grep(plate, dup.kin2$id1.plate), grep(plate, dup.kin2$id2.plate))),
c("Kinship", "firstID","secondID","id1.plate","id1.well","id2.plate", "id2.well")],
high_kin=high.kin2[unique(c(grep(plate, high.kin2$id1.plate), grep(plate, high.kin2$id2.plate))),
c("Kinship", "firstID","secondID","id1.plate","id1.well","id2.plate", "id2.well")])}
p<-get.info("Plate_001")
p
p<-get.info("Plate_0001")
p
p$dups[as.character(p$dups$id1.plate) != as.character(p$dups$id2.plate),]
dim(p$dups[as.character(p$dups$id1.plate) != as.character(p$dups$id2.plate),])
dim(p$dups[as.character(p$dups$id1.plate) != as.character(p$dups$id2.plate) & p$dups$Kinship>0.4,])
p$dups[as.character(p$dups$id1.plate) == as.character(p$dups$id2.plate),]
dim(p$dups[as.character(p$dups$id1.plate) == as.character(p$dups$id2.plate),])
dim(p$dups[as.character(p$dups$id1.plate) == as.character(p$dups$id2.plate) & p$dups$Kinship>0.4,])
p$high_kin[as.character(p$high_kin$id1.plate) != as.character(p$high_kin$id2.plate),]
dim(p$high_kin[as.character(p$high_kin$id1.plate) != as.character(p$high_kin$id2.plate),])
p$high_kin[as.character(p$high_kin$id1.plate) == as.character(p$high_kin$id2.plate),]
dim(p$high_kin[as.character(p$high_kin$id1.plate) == as.character(p$high_kin$id2.plate),])
